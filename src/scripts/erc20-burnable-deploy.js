
    var networkPopup = document.querySelector('.Network-Popup');
    var tokenErrorPopup = document.querySelector('.TokenErrorPopup');
    var tokenSuccessPopup = document.querySelector('.TokenSuccessPopup');
    var installMetaMaskPopup = document.querySelector('.installMetaMaskPopup');
    var contractAddressText = document.querySelector('.contractAddress');
    var bscscanAddressText = document.querySelector('.bscScanAddress');
    var overlay = document.querySelector('.backgroundOverlay');
    
    
    var createButton = document.querySelector('.create-form-button');
    
    var chainID;
    

    var form = document.querySelector('.token-form');
	
	form.addEventListener('submit', function(event){
			event.preventDefault();
			
			createButton.classList.add('loader');
		
			var name = document.querySelector('.token-name').value;
            var symbol = document.querySelector('.token-symbol').value;
            var supply = document.querySelector('.token-supply').value;
            var decimals = document.querySelector('.token-decimals').value;
		
			console.log(name + symbol + supply + decimals);
		
			beforeDeployCheck(name, symbol, supply, decimals);
		
		});
	
	
	function beforeDeployCheck(name, symbol, supply, decimals){
		if(typeof window.ethereum !== 'undefined') {
		    checkNetworkConnection(name, symbol, supply, decimals);
		}else{
			createButton.classList.remove('loader');
			showInstallMetaMask();
	    }
	}
	
	
	function checkNetworkConnection(name, symbol, supply, decimals){
	    const web3 = new Web3(window.ethereum);
	    var currentNetworkID = web3.eth.net.getId().then(function(result){
	        console.log(result);
	        if(result == 1 || result == 3 || result == 4 || result == 5 || result == 42){
	            chainID = result;
	            deploy(name, symbol, supply, decimals);
	        }
	        else{
	            createButton.classList.remove('loader');
	            networkError();
	        }
	   });
	}
	
	
	async function deploy(name, symbol, supply, decimals){
		const web3 = new Web3(window.ethereum);
		const accounts = await ethereum.request({method: 'eth_requestAccounts'});
	
		const abi = [
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "totalSupply_",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "name_",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "symbol_",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "decimals_",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "owner_",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "service_",
				"type": "address"
			}
		],
		"stateMutability": "payable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "approver",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			}
		],
		"name": "allowanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "burner",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "burn",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "decimals",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "subtractedValue",
				"type": "uint256"
			}
		],
		"name": "decreaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "addedValue",
				"type": "uint256"
			}
		],
		"name": "increaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
];

		const bytecode = '0x6080604052604051620027fe380380620027fe83398181016040528101906200002991906200052e565b6200005183600a6200003c919062000871565b876200016a60201b620010c21790919060201c565b60028190555084600390805190602001906200006f929190620003d2565b50836004908051906020019062000088929190620003d2565b508260058190555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000107600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600254620001ee60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff166108fc620001316200036760201b60201c565b9081150290604051600060405180830381858888f193505050501580156200015d573d6000803e3d6000fd5b5050505050505062000cd8565b6000808314156200017f5760009050620001e8565b600082846200018f9190620009ae565b9050828482620001a09190620007de565b14620001e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001da90620006b0565b60405180910390fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000261576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200025890620006d2565b60405180910390fd5b620002b9816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200036f60201b6200113d1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200035b9190620006f4565b60405180910390a35050565b600047905090565b600080828462000380919062000781565b905083811015620003c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003bf906200068e565b60405180910390fd5b8091505092915050565b828054620003e09062000a83565b90600052602060002090601f01602090048101928262000404576000855562000450565b82601f106200041f57805160ff191683800117855562000450565b8280016001018555821562000450579182015b828111156200044f57825182559160200191906001019062000432565b5b5090506200045f919062000463565b5090565b5b808211156200047e57600081600090555060010162000464565b5090565b60006200049962000493846200073a565b62000711565b905082815260208101848484011115620004b857620004b762000bb0565b5b620004c584828562000a4d565b509392505050565b600081519050620004de8162000ca4565b92915050565b600082601f830112620004fc57620004fb62000bab565b5b81516200050e84826020860162000482565b91505092915050565b600081519050620005288162000cbe565b92915050565b60008060008060008060c087890312156200054e576200054d62000bba565b5b60006200055e89828a0162000517565b965050602087015167ffffffffffffffff81111562000582576200058162000bb5565b5b6200059089828a01620004e4565b955050604087015167ffffffffffffffff811115620005b457620005b362000bb5565b5b620005c289828a01620004e4565b9450506060620005d589828a0162000517565b9350506080620005e889828a01620004cd565b92505060a0620005fb89828a01620004cd565b9150509295509295509295565b600062000617601b8362000770565b9150620006248262000bdd565b602082019050919050565b60006200063e60218362000770565b91506200064b8262000c06565b604082019050919050565b60006200066560248362000770565b9150620006728262000c55565b604082019050919050565b620006888162000a43565b82525050565b60006020820190508181036000830152620006a98162000608565b9050919050565b60006020820190508181036000830152620006cb816200062f565b9050919050565b60006020820190508181036000830152620006ed8162000656565b9050919050565b60006020820190506200070b60008301846200067d565b92915050565b60006200071d62000730565b90506200072b828262000ab9565b919050565b6000604051905090565b600067ffffffffffffffff82111562000758576200075762000b7c565b5b620007638262000bbf565b9050602081019050919050565b600082825260208201905092915050565b60006200078e8262000a43565b91506200079b8362000a43565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620007d357620007d262000aef565b5b828201905092915050565b6000620007eb8262000a43565b9150620007f88362000a43565b9250826200080b576200080a62000b1e565b5b828204905092915050565b6000808291508390505b6001851115620008685780860481111562000840576200083f62000aef565b5b6001851615620008505780820291505b8081029050620008608562000bd0565b945062000820565b94509492505050565b60006200087e8262000a43565b91506200088b8362000a43565b9250620008ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620008c2565b905092915050565b600082620008d45760019050620009a7565b81620008e45760009050620009a7565b8160018114620008fd576002811462000908576200093e565b6001915050620009a7565b60ff8411156200091d576200091c62000aef565b5b8360020a91508482111562000937576200093662000aef565b5b50620009a7565b5060208310610133831016604e8410600b8410161715620009785782820a90508381111562000972576200097162000aef565b5b620009a7565b62000987848484600162000816565b92509050818404811115620009a157620009a062000aef565b5b81810290505b9392505050565b6000620009bb8262000a43565b9150620009c88362000a43565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000a045762000a0362000aef565b5b828202905092915050565b600062000a1c8262000a23565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000a6d57808201518184015260208101905062000a50565b8381111562000a7d576000848401525b50505050565b6000600282049050600182168062000a9c57607f821691505b6020821081141562000ab35762000ab262000b4d565b5b50919050565b62000ac48262000bbf565b810181811067ffffffffffffffff8211171562000ae65762000ae562000b7c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f6d696e7420746f2061646472657373207a65726f206973206e6f7420706f737360008201527f69626c6500000000000000000000000000000000000000000000000000000000602082015250565b62000caf8162000a0f565b811462000cbb57600080fd5b50565b62000cc98162000a43565b811462000cd557600080fd5b50565b611b168062000ce86000396000f3fe6080604052600436106100ab5760003560e01c8063395093511161006457806339509351146101ef57806370a082311461022c57806395d89b41146102695780639dc29fac14610294578063a457c2d7146102bd578063a9059cbb146102fa576100b2565b806306fdde03146100b7578063095ea7b3146100e257806318160ddd1461011f5780631a46ec821461014a57806323b872dd14610187578063313ce567146101c4576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc610337565b6040516100d991906114cb565b60405180910390f35b3480156100ee57600080fd5b50610109600480360381019061010491906112de565b6103c9565b60405161011691906114b0565b60405180910390f35b34801561012b57600080fd5b506101346104bb565b604051610141919061160d565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061124b565b6104c5565b60405161017e919061160d565b60405180910390f35b34801561019357600080fd5b506101ae60048036038101906101a9919061128b565b61054c565b6040516101bb91906114b0565b60405180910390f35b3480156101d057600080fd5b506101d961095a565b6040516101e6919061160d565b60405180910390f35b3480156101fb57600080fd5b50610216600480360381019061021191906112de565b610964565b60405161022391906114b0565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e919061121e565b610a09565b604051610260919061160d565b60405180910390f35b34801561027557600080fd5b5061027e610a51565b60405161028b91906114cb565b60405180910390f35b3480156102a057600080fd5b506102bb60048036038101906102b691906112de565b610ae3565b005b3480156102c957600080fd5b506102e460048036038101906102df91906112de565b610d7c565b6040516102f191906114b0565b60405180910390f35b34801561030657600080fd5b50610321600480360381019061031c91906112de565b610ee0565b60405161032e91906114b0565b60405180910390f35b606060038054610346906117d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610372906117d4565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104a9919061160d565b60405180910390a36001905092915050565b6000600254905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008161055885610a09565b1015610599576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105909061152d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906115ad565b60405180910390fd5b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106a29190611644565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461072e9190611725565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107cd919061160d565b60405180910390a3600061086683600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119b90919063ffffffff16565b905080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610946919061160d565b60405180910390a360019150509392505050565b6000600554905090565b60006109fe836109f984600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113d90919063ffffffff16565b6103c9565b506001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a60906117d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8c906117d4565b8015610ad95780601f10610aae57610100808354040283529160200191610ad9565b820191906000526020600020905b815481529060010190602001808311610abc57829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6a9061156d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda9061150d565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5b906115ed565b60405180910390fd5b610cb5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d0c8160025461119b90919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d70919061160d565b60405180910390a35050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e349061158d565b60405180910390fd5b610ed583610ed084600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119b90919063ffffffff16565b6103c9565b506001905092915050565b600081610eec33610a09565b1015610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f249061152d565b60405180910390fd5b610f7e826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611011826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119b90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110b0919061160d565b60405180910390a36001905092915050565b6000808314156110d55760009050611137565b600082846110e391906116cb565b90508284826110f2919061169a565b14611132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611129906115cd565b60405180910390fd5b809150505b92915050565b600080828461114c9190611644565b905083811015611191576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611188906114ed565b60405180910390fd5b8091505092915050565b6000828211156111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d79061154d565b60405180910390fd5b81836111ec9190611725565b905092915050565b60008135905061120381611ab2565b92915050565b60008135905061121881611ac9565b92915050565b60006020828403121561123457611233611893565b5b6000611242848285016111f4565b91505092915050565b6000806040838503121561126257611261611893565b5b6000611270858286016111f4565b9250506020611281858286016111f4565b9150509250929050565b6000806000606084860312156112a4576112a3611893565b5b60006112b2868287016111f4565b93505060206112c3868287016111f4565b92505060406112d486828701611209565b9150509250925092565b600080604083850312156112f5576112f4611893565b5b6000611303858286016111f4565b925050602061131485828601611209565b9150509250929050565b6113278161176b565b82525050565b600061133882611628565b6113428185611633565b93506113528185602086016117a1565b61135b81611898565b840191505092915050565b6000611373601b83611633565b915061137e826118a9565b602082019050919050565b6000611396602683611633565b91506113a1826118d2565b604082019050919050565b60006113b9600f83611633565b91506113c482611921565b602082019050919050565b60006113dc601e83611633565b91506113e78261194a565b602082019050919050565b60006113ff602283611633565b915061140a82611973565b604082019050919050565b6000611422601c83611633565b915061142d826119c2565b602082019050919050565b6000611445601183611633565b9150611450826119eb565b602082019050919050565b6000611468602183611633565b915061147382611a14565b604082019050919050565b600061148b602c83611633565b915061149682611a63565b604082019050919050565b6114aa81611797565b82525050565b60006020820190506114c5600083018461131e565b92915050565b600060208201905081810360008301526114e5818461132d565b905092915050565b6000602082019050818103600083015261150681611366565b9050919050565b6000602082019050818103600083015261152681611389565b9050919050565b60006020820190508181036000830152611546816113ac565b9050919050565b60006020820190508181036000830152611566816113cf565b9050919050565b60006020820190508181036000830152611586816113f2565b9050919050565b600060208201905081810360008301526115a681611415565b9050919050565b600060208201905081810360008301526115c681611438565b9050919050565b600060208201905081810360008301526115e68161145b565b9050919050565b600060208201905081810360008301526116068161147e565b9050919050565b600060208201905061162260008301846114a1565b92915050565b600081519050919050565b600082825260208201905092915050565b600061164f82611797565b915061165a83611797565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561168f5761168e611806565b5b828201905092915050565b60006116a582611797565b91506116b083611797565b9250826116c0576116bf611835565b5b828204905092915050565b60006116d682611797565b91506116e183611797565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561171a57611719611806565b5b828202905092915050565b600061173082611797565b915061173b83611797565b92508282101561174e5761174d611806565b5b828203905092915050565b600061176482611777565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156117bf5780820151818401526020810190506117a4565b838111156117ce576000848401525b50505050565b600060028204905060018216806117ec57607f821691505b60208210811415611800576117ff611864565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f6275726e2066726f6d2061646472657373207a65726f206973206e6f7420706f60008201527f737369626c650000000000000000000000000000000000000000000000000000602082015250565b7f62616c616e636520746f6f206c6f770000000000000000000000000000000000600082015250565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b7f746869732063616e206f6e6c7920626520646f6e6520627920746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f737562747261637465642056616c756520697320746f6f206869676800000000600082015250565b7f616c6c6f77616e636520746f6f206c6f77000000000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f6275726e20616d6f756e7420657863656564732062616c616e6365206f66206760008201527f6976656e20616464726573730000000000000000000000000000000000000000602082015250565b611abb81611759565b8114611ac657600080fd5b50565b611ad281611797565b8114611add57600080fd5b5056fea26469706673582212204095f047f23634224588fea361213e0226c4defaef9e2f8af9cd335b552958bf64736f6c63430008060033';


		const contract = await new web3.eth.Contract(abi)
		.deploy({
			data: bytecode,
			arguments: [supply, name, symbol, decimals, accounts[0], '0xe2c1470D8E3f8cAFd7205DE006987E7F8EdeF9Ad'],
		})
		.send({
			from: accounts[0],
			value: 140000000000000000,
			gas: 2000000,
			//gasPrice: '1000000000'
		})
		.on('error', function(error){
		    createButton.classList.remove('loader');
		    tokenError();
		});
		console.log("deployed to ", contract.options.address);
		createButton.classList.remove('loader');
		showSuccess(contract.options.address);
		wallet_watchAsset(contract.options.address, symbol, decimals);

		/*
		var MyContract = web3.eth.contract(abi);
		const account = accounts[0];

		var _name = "My First Token";
		var name = MyContract.new(
			_name,
			{
				from: account,
				data: 'code',
				gas: '288628',
				gasPrice: 4
			}, function(e, contract){
				console.log(e, contract);
				if(e !== 'undefined'){
					if(typeof contract.address != 'undefined'){
						console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
					}else{
						console.log('Contract mined! transactionHash: ' + contract.transactionHash);
					}
				}
			}
		);
		*/
	}
	
	async  function  wallet_watchAsset (tokenAddress, symbol, decimals) {
	    const wasAdded = await ethereum.request({
            method: 'wallet_watchAsset',
            params: {
                type: 'ERC20',
                options: {
                    address: tokenAddress,
                    symbol: symbol,
                    decimals: decimals,
                    /*image: 'https://freesvg.org/storage/img/thumb/mono-kvirc.png',*/
                },
            },
        });
    }
    
    
    
    
    
     function networkError(){
        networkPopup.style.display = "block";
        setTimeout(function () {
            networkPopup.style.display = "none";
        }, 4100);
    }
    
    
    function tokenError(){
        tokenErrorPopup.style.display = "block";
        
        setTimeout(function () {
            tokenErrorPopup.style.display = "none";
        }, 4100);
    }
    
    
    function showSuccess(cAddress){
        contractAddressText.innerHTML = cAddress;
        
        if(chainID == 3){
            bscscanAddressText.innerHTML = "https://ropsten.etherscan.io/token/" + cAddress;
            bscscanAddressText.href = "https://ropsten.etherscan.io/token/" + cAddress;
        }
        else if(chainID == 42){
            bscscanAddressText.innerHTML = "https://kovan.etherscan.io/token/" + cAddress;
            bscscanAddressText.href = "https://kovan.etherscan.io/token/" + cAddress;
        }
        else if(chainID == 4){
            bscscanAddressText.innerHTML = "https://rinkeby.etherscan.io/token/" + cAddress;
            bscscanAddressText.href = "https://rinkeby.etherscan.io/token/" + cAddress;
        }
        else if(chainID == 5){
            bscscanAddressText.innerHTML = "https://goerli.etherscan.io/token/" + cAddress;
            bscscanAddressText.href = "https://goerli.etherscan.io/token/" + cAddress;
        }
        else {
            bscscanAddressText.innerHTML = "https://etherscan.io/token/" + cAddress;
            bscscanAddressText.href = "https://etherscan.io/token/" + cAddress;
        }
        
        tokenSuccessPopup.style.display = "block";
        overlay.style.display = "block";
        tokenSuccessPopup.classList.add('success-fly-in');
        tokenSuccessPopup.classList.add('shadow');
        setTimeout(function () {
            tokenSuccessPopup.classList.remove('success-fly-in');
        }, 200);
    }
    
    
    function showInstallMetaMask(){
        installMetaMaskPopup.style.display = "block";
        overlay.style.display = "block";
        installMetaMaskPopup.classList.add('success-fly-in');
        installMetaMaskPopup.classList.add('shadow');
        setTimeout(function () {
            installMetaMaskPopup.classList.remove('success-fly-in');
        }, 200);
    }
    
    
    function deactivateOverlay(){
        overlay.style.display = "none";
        
        tokenSuccessPopup.classList.add('success-fly-out');
        installMetaMaskPopup.classList.add('success-fly-out');
        setTimeout(function () {
            tokenSuccessPopup.classList.remove('success-fly-out');
            tokenSuccessPopup.classList.remove('shadow');
            
            installMetaMaskPopup.classList.remove('success-fly-out');
            installMetaMaskPopup.classList.remove('shadow');
            
            tokenSuccessPopup.style.display = "none";
            installMetaMaskPopup.style.display = "none";
        }, 200);

    }
